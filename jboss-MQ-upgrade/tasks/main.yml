---

- name: Include Vars
  ansible.builtin.include_vars:
    file: vars/variablesMQ.yml
  tags: 
    - copy_binaries
    - copy_java
    - copy_configs
    - copy_dfs
    - copy_ATU
    - copy_rename
    - copy_broker
    - copy_artemis
    - copy_restartactivemq
    - copy_activemq_profile
    - update_activemq

- name: vault variables
  ansible.builtin.include_vars:
    file: vars/vault-test.yml
  tags: 
    - copy_binaries
    - copy_java
    - copy_configs
    - copy_dfs
    - copy_ATU
    - copy_rename
    - copy_broker
    - copy_artemis
    - copy_restartactivemq
    - copy_activemq_profile
    - update_activemq

- name: Enable Long Paths on Windows Server
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem
    name: LongPathsEnabled
    data: 1
    type: dword
  become: yes
  become_method: runas
  become_user: '{{ aaspiremanage_user }}'
  vars:
     ansible_become_password: '{{ aaspiremanage_pass }}'     
  tags: 
    - copy_binaries

- name: Copy activemq files
  when: DC
  win_copy:
    src: "{{ installation_src }}\\{{ activemq_inst_ver }}"
    dest: "{{ jboss_install_path }}"
    force: no
    remote_src: True
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: ACTIVEMQ_FILECOPY
  become: yes
  become_method: runas
  become_user: '{{ aaspiremanage_user }}'
  vars:
     ansible_become_password: '{{ aaspiremanage_pass }}'     
  tags: 
    - copy_binaries
    
- debug: var=ACTIVEMQ_FILECOPY
  tags: 
    - copy_binaries

- name: Create broker with item directory
  win_file:
    path: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\"
    state: directory
  loop: "{{ NODES.split(',') }}"
  tags: 
    - copy_binaries
    - config_dirs

- name: CopyBroker files
  #when: myfolder.stat.exists
  win_copy:
     src: "{{ installation_src }}\\broker\\"
     dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\"
     remote_src: True
  loop: "{{ NODES.split(',') }}"
  register: CopyConfigDir
  become: yes
  become_method: runas
  become_user: '{{ aaspiremanage_user }}'
  vars:
     ansible_become_password: '{{ aaspiremanage_pass }}'     
  tags: 
    - copy_binaries
    - config_dirs
    - copy_configs
    - copy_broker

- debug: var=CopyConfigDir
  tags: 
    - copy_configs
    - copy_binaries
    - copy_broker

# - name: Rename the folder using command module
#   command: mv "\\{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\broker" "\\{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ item }}"
#   args:
#     removes: "\\{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\broker"
#   loop: "{{ ENVNAME.split(',') }}"
#   ignore_errors: no
#   tags: 
#     - copy_binaries
#     - copy_rename
#- debug: var=ACTIVEMQ_rename
#  tags: 
#    - copy_binaries
#    - copy_rename
#    - debug: var=ACTIVEMQ_FILECOPY
#  tags: 
#    - copy_binaries
    

- name: Create activemq log directory
  when: DC
  win_file:
    path: "{{ logs_path }}\\ActiveMQ\\{{ item }}"
    #path: 'L:\logs\ActiveMQ'
    state: directory
    force: no
    remote_src: True
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  become: yes
  become_method: runas
  become_user: '{{ aaspiremanage_user }}'
  vars:
     ansible_become_password: '{{ aaspiremanage_pass }}'
  tags: 
    - copy_binaries

- debug: var=log_folder
  tags: 
    - copy_binaries

- name: Copy AtuEnvironmentSpringSpecific.properties template
  win_template:
    src: EAP74AtuEnvironmentSpringSpecific.properties.j2
    dest: "{{ jboss_home }}\\aaspireSlave\\servers\\{{ item }}\\configuration\\AtuEnvironmentSpringSpecific.properties"
    #dest: 'E:\node\jboss-eap-7.3\aaspireSlave\servers\{{ item }}\configuration\AtuEnvironmentSpringSpecific.properties'
    backup: yes
    force: yes
  loop: "{{ NODES.split(',') }}"
  ignore_errors: no
  tags: 
    - copy_binaries
    - copy_ATU

- name: Copy activemq artemis-service
  when: DC
  win_template:
    src: artemis-service.xml.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\bin\\artemis-service.xml"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_artemis_service
  become: yes
  become_method: runas
  become_user: '{{ aaspiremanage_user }}'
  vars:
     ansible_become_password: '{{ aaspiremanage_pass }}'     
  tags: 
    - copy_binaries
    - copy_artemis

- debug: var=copy_artemis_service
  tags: 
    - copy_binaries
    - copy_artemis

- name: Copy activemq management file
  when: DC
  win_template:
    src: management.xml.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\etc\\management.xml"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_activemq_management
  tags: 
    - copy_binaries
    - copy_activemq

- debug: var=copy_activemq_management
  tags: 
    - copy_binaries
    - copy_activemq

- name: Copy activemq broker
  when: DC
  win_template:
    src: broker.xml.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\etc\\broker.xml"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_activemq_broker
  tags: 
    - copy_binaries
    - copy_activemq

- debug: var=copy_activemq_broker
  tags: 
    - copy_binaries
    - copy_activemq

- name: Copy activemq bootstrap
  when: DC
  win_template:
    src: bootstrap.xml.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\etc\\bootstrap.xml"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_activemq_bootstrap
  tags: 
    - copy_binaries
    - copy_activemq

- debug: var=copy_activemq_bootstrap
  tags: 
    - copy_binaries
    - copy_activemq

- name: Copy activemq jolokia-acces
  when: DC
  win_template:
    src: jolokia-access.xml.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\etc\\jolokia-access.xml"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_activemq_jolokia
  tags: 
    - copy_binaries
    - copy_activemq

- debug: var=copy_activemq_jolokia
  tags: 
    - copy_binaries
    - copy_activemq

- name: Copy activemq log4j2.properties
  when: DC
  win_template:
    src: log4j2.properties.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\etc\\log4j2.properties"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_activemq_log4j2
  tags: 
    - copy_binaries
    - copy_activemq

- debug: var=copy_activemq_log4j2
  tags: 
    - copy_binaries
    - copy_activemq


# - name: Run .cmd file on windows host
#   win_shell:  |
#     pushd \\UNC-path\Labos\Extern\nomadconffiles && Call "run.bat"
#   args:
#     executable: cmd
#   become: yes
#   become_method: runas
#   become_user: '{{ aaspiremanage_user }}'
#   vars:
#      ansible_become_password: '{{ aaspiremanage_pass }}'
#      # win-shell: 'E:\node\amq-broker-7.11.6\apache-artemis-2.28.0.redhat-00019\bin\artemis.cmd {{ mqusername }} {{ mqpassword}}'    
#   register: RunCMD
#   tags: 
#     - copy_binaries
#     - copy_RunCMD

- name: Copy artemis-profile-cmd
  when: DC
  win_template:
    src: artemis.profile.cmd.j2
    dest: "{{ activemq_home }}\\apache-artemis-2.28.0.redhat-00019\\bin\\{{ ENVNAME }}\\etc\\artemis.profile.cmd"
    backup: yes
    force: yes
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: copy_activemq_profile
  tags: 
    - copy_binaries
    - copy_activemq_profile

- debug: var=activemq_profile
  tags: 
    - copy_binaries
    - copy_activemq_profile

- name: Run install ActiveMQ to create service
  when: DC
  win_command: powershell.exe -
  args:
    stdin: 'E:\node\amq-broker-7.11.6\apache-artemis-2.28.0.redhat-00019\bin\{{ ENVNAME }}\bin\artemis-service.exe install'
  register: CreateMQService
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
   #    force: no
  register: CreateDCService
  tags: 
    - copy_binaries
    - copy_installactivemq

- debug: var=CreateDCService
  tags: 
    - copy_binaries
    - copy_installactivemq

- name: Update ActiveMQ service config
  when: DC
  win_command: 'sc config "ActiveMQ Artemis {{ ENVNAME }}" start= delayed-auto'
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: no
  register: update_activemq
  tags: 
    - copy_binaries
    - update_activemq

- debug: var=update_activemq
  tags: 
    - copy_binaries
    - update_activemq

- name: Restart ActiveMQ
  when: DC
  win_service:
     name: 'ActiveMQ Artemis {{ ENVNAME }}'
     state: started
  loop: "{{ ENVNAME.split(',') }}"
  ignore_errors: yes
  register: restart_activemq
  tags: 
    - copy_binaries
    - copy_restartactivemq

- debug: var=restart_activemq
  tags: 
    - copy_binaries
    - copy_restartactivemq

- name: DeleteTempDir
  when: DC
  win_file:
    path: E:\node\temp\misc
    state: absent

######################
